{"version":3,"sources":["components/Header.js","components/BuildingBonusInput.js","components/BuildingBonusPanel.js","components/Building.js","components/BuildingColumn.js","components/BuildingSelector.js","components/ScorePanelDisplayImmutable.js","components/ScorePanelDisplayMutable.js","components/ScorePanel.js","components/Scoring.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","BuildingBonusInput","props","FormGroup","htmlFor","inputId","labelText","type","id","placeholder","inputPlaceholder","value","inputValue","onChange","handleBonusInput","onClick","e","stopPropagation","BuildingBonusPanel","inputFormCode","inputValuePropCode","bonusContributor","handleBonusInputCode","setBonusContributor","parseInt","target","buildingName","components_BuildingBonusInput","Form","inline","check","Label","Input","checked","isActive","handleActive","Building","bonusPanelCode","builtStatusStyle","isBuilt","hasBonusPanel","components_BuildingBonusPanel","contrib","setBonusContributorOf","concat","handleBuilt","BuildingColumn","Col","Card","CardHeader","columnData","buildingLevel","buildings","map","building","components_Building","key","toggleBuiltOf","toggleActiveOf","buildingToChange","BuildingSelector","Container","Row","buildingsData","column","index","components_BuildingColumn","name","ScorePanelDisplayImmutable","isScoreLarge","scoreValue","ScorePanelDisplayMutable","Badge","handleVpChipChange","href","xs","ScorePanel","scoreDisplayCode","canChangeScore","components_ScorePanelDisplayMutable","preventDefault","changeVpChipCount","components_ScorePanelDisplayImmutable","titleText","Scoring","components_ScorePanel","totalVpScore","vpScore","vpChips","changeType","vpBuildings","vpBonuses","App","state","buildingColumns","buildingType","buildingPoints","isNumber","valueToCheck","isNaN","parseFloat","isFinite","flattenBuildingColumnsInState","_this","reduce","acc","cur","changePropertyOf","otherArgs","callback","setState","Object","objectSpread","callbackForToggleBoolPropertyOf","defineProperty","property","console","log","callbackForSetBonusContributorOf","toggleBoolPropertyOf","countBuiltBuildings","getVpBonusFor","buildingBonusPoints","productionLgCount","productionSmCount","Math","floor","productionVioletCount","getVpBonuses","getVpBuildings","changeValue","getTotalVpScore","getVpScoreObject","fluid","components_Header","components_Scoring","this","components_BuildingSelector","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.72524e66.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <div className=\"text-center bordered-round\">\n      <h4>Puerto Rico Scoresheet</h4>\n      <p className=\"lead text-muted\">\n        Helping you figure out how badly you lost since 2018\n      </p>\n  </div>\n);\n\nexport default Header;","import React from 'react';\nimport {FormGroup} from 'reactstrap';\nimport PropTypes from \"prop-types\";\n\nfunction BuildingBonusInput(props) {\n  return(\n    <FormGroup>\n      <label htmlFor={props.inputId} className=\"mx-1 sr-only\">\n        {props.labelText}\n      </label>\n      <input \n        type=\"text\" \n        id={props.inputId} \n        placeholder={props.inputPlaceholder} \n        value={props.inputValue} \n        className=\"form-control-sm\" \n        onChange={props.handleBonusInput} \n        onClick={(e) => {e.stopPropagation()}} \n      />\n    </FormGroup>\n  )\n};\n\nBuildingBonusInput.propTypes = {\n  inputId: PropTypes.string.isRequired, \n  labelText: PropTypes.string.isRequired,\n  inputPlaceholder: PropTypes.string.isRequired,\n  inputValue: PropTypes.oneOfType([\n    PropTypes.string, \n    PropTypes.number\n  ]).isRequired, \n  handleBonusInput: PropTypes.func.isRequired,\n}\n\nexport default BuildingBonusInput;","import React from 'react';\nimport {Input, Form, FormGroup, Label} from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport BuildingBonusInput from \"./BuildingBonusInput\";\n\nfunction BuildingBonusPanel(props) {\n  let inputFormCode;\n  const inputValuePropCode = (\n    (props.bonusContributor <= 0) ? \"\" : props.bonusContributor\n  );\n  const handleBonusInputCode = (e) => {props.setBonusContributor(\n    parseInt(e.target.value, 10)\n  )};\n  switch (props.buildingName){\n    case 'Residence':\n      inputFormCode = (\n        <BuildingBonusInput \n          inputId=\"islandSpaces\" \n          labelText=\"Total occupied island spaces\" \n          inputPlaceholder=\"Island spaces\" \n          inputValue = {inputValuePropCode} \n          handleBonusInput={handleBonusInputCode} \n        />\n      );\n      break;\n    case 'Fortress':\n      inputFormCode = (\n        <BuildingBonusInput \n          inputId=\"totalWorkers\" \n          labelText=\"Total number of workers\" \n          inputPlaceholder=\"Total workers\" \n          inputValue = {inputValuePropCode} \n          handleBonusInput={handleBonusInputCode} \n        />\n      );\n      break;\n    default:\n      inputFormCode = \"\";\n      break;\n  }\n\n  return(\n    <div>\n      <hr className=\"my-1\"/>\n      <Form inline className=\"justify-content-center\">\n        <FormGroup check>\n          <Label className=\"mx-1\" check>\n            <Input \n              type=\"checkbox\" \n              checked={props.isActive} \n              onChange={props.handleActive}\n            /> 👷🏾 ?\n          </Label>\n        </FormGroup>\n        {inputFormCode}\n      </Form>\n    </div>\n  )\n};\n\nBuildingBonusPanel.propTypes = {\n  buildingName: PropTypes.string.isRequired, \n  bonusContributor: PropTypes.oneOfType([\n    PropTypes.string, \n    PropTypes.number\n  ]).isRequired, \n  isActive: PropTypes.bool.isRequired, \n  handleActive: PropTypes.func.isRequired, \n  setBonusContributor: PropTypes.func, \n}\n\nexport default BuildingBonusPanel;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport BuildingBonusPanel from \"./BuildingBonusPanel\";\n\nfunction Building(props) {\n  const builtStatusStyle = (props.isBuilt ? \"bg-success\" : \"bg-light\");\n  let bonusPanelCode;\n  if (props.hasBonusPanel) {\n    bonusPanelCode=(\n      <BuildingBonusPanel \n        buildingName={props.buildingName} \n        bonusContributor={props.bonusContributor}\n        isActive={props.isActive} \n        handleActive={() => props.handleActive()} \n        setBonusContributor={\n          (contrib) => props.setBonusContributorOf(contrib, props.buildingName)\n        }\n      />\n    );\n  } else {\n    bonusPanelCode=\"\";\n  }\n\n  return(\n    <div \n      className={`${builtStatusStyle} text-center bordered-round`} \n      onClick={props.handleBuilt} \n      id={props.buildingName}\n    >\n      {props.buildingName}\n      {bonusPanelCode}\n    </div>\n  )\n};\n\nBuilding.propTypes = {\n  buildingName: PropTypes.string.isRequired, \n  bonusContributor: PropTypes.oneOfType([\n    PropTypes.string, \n    PropTypes.number\n  ]).isRequired, \n  isBuilt: PropTypes.bool.isRequired, \n  isActive: PropTypes.bool.isRequired, \n  hasBonusPanel: PropTypes.bool.isRequired, \n  handleBuilt: PropTypes.func.isRequired, \n  setBonusContributorOf: PropTypes.func, \n}\n\nexport default Building;","import React from 'react';\nimport {\n  Card, \n  CardHeader, \n  Col\n} from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport Building from \"./Building\";\n\nconst BuildingColumn = (props) => {\n  return(\n    <Col>\n      <Card className=\"text-center\">\n        <CardHeader>\n          {props.columnData.buildingLevel}\n        </CardHeader>\n      </Card>\n      {props.columnData.buildings.map(\n        (building) => {\n          return(\n            <Building \n              key={building.buildingName}\n              buildingName={building.buildingName} \n              bonusContributor={building.bonusContributor} \n              isBuilt={building.isBuilt}\n              isActive={building.isActive}\n              hasBonusPanel={\n                props.columnData.buildingLevel >= 4 ? true : false\n              }\n              handleBuilt={() => {\n                props.toggleBuiltOf(building.buildingName);\n              }}\n              handleActive={() => {\n                props.toggleActiveOf(building.buildingName);\n              }}\n              setBonusContributorOf={\n                (contrib, buildingToChange) => props.setBonusContributorOf(\n                  contrib, buildingToChange\n                )\n              }\n            />\n          )\n        }\n      )}\n    </Col>\n  )\n};\n\nBuildingColumn.propTypes = {\n  columnData: PropTypes.shape({\n      buildingLevel: PropTypes.number.isRequired,\n      buildings: PropTypes.array.isRequired, \n    }).isRequired, \n  toggleBuiltOf: PropTypes.func.isRequired, \n  toggleActiveOf: PropTypes.func.isRequired, \n  setBonusContributorOf: PropTypes.func, \n};\n\nexport default BuildingColumn;","import React from 'react';\nimport {\n  Container, \n  Row\n} from 'reactstrap';\nimport PropTypes from \"prop-types\";\nimport BuildingColumn from \"./BuildingColumn\";\n\nconst BuildingSelector = (props) => (\n  <Container>\n    <Row>\n      {props.buildingsData.map(\n        (column, index) => {\n          return(\n            <BuildingColumn \n              key={column.buildingLevel}\n              columnData={column} \n              toggleBuiltOf={(name) => {\n                props.toggleBuiltOf(name);\n              }}\n              toggleActiveOf={(name) => {\n                props.toggleActiveOf(name);\n              }}\n              setBonusContributorOf={\n                (contrib, buildingToChange) => props.setBonusContributorOf(\n                  contrib, buildingToChange\n                )\n              }\n            />\n          )\n        }\n      )}\n    </Row>\n  </Container>\n);\n\nBuildingSelector.propTypes = {\n  buildingsData: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired, \n  toggleBuiltOf: PropTypes.func.isRequired, \n  toggleActiveOf: PropTypes.func.isRequired, \n  setBonusContributorOf: PropTypes.func, \n}\n\nexport default BuildingSelector;","import React from 'react';\n\nfunction ScorePanelDisplayImmutable(props) {\n  return(\n    <div>\n      {\n        props.isScoreLarge ?\n        <h2>{props.scoreValue}</h2> :\n        <h4>{props.scoreValue}</h4>\n      }\n    </div>\n  )\n}\n\nexport default ScorePanelDisplayImmutable;","import React from 'react';\nimport {\n  Badge, \n  Col, \n  Row\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nfunction ScorePanelDisplayMutable(props) {\n  return(\n    <Row>\n      <Col className=\"px-1 text-right\">\n        <Badge onClick={props.handleVpChipChange} href=\"#\" id=\"increment\">\n          +\n        </Badge>\n      </Col>\n      <Col xs=\"auto\" className=\"px-1\">\n        {\n          props.isScoreLarge ?\n          <h2>{props.scoreValue}</h2> :\n          <h4>{props.scoreValue}</h4>\n        }\n      </Col>\n      <Col className=\"px-1 text-left\">\n        <Badge onClick={props.handleVpChipChange} href=\"#\" id=\"decrement\">\n          -\n        </Badge>\n      </Col>\n    </Row>\n  );\n}\n\nScorePanelDisplayMutable.propTypes = {\n  handleVpChipChange: PropTypes.func.isRequired, \n  isScoreLarge: PropTypes.bool.isRequired, \n  scoreValue: PropTypes.number.isRequired, \n}\n\nexport default ScorePanelDisplayMutable;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ScorePanelDisplayImmutable from \"./ScorePanelDisplayImmutable\";\nimport ScorePanelDisplayMutable from \"./ScorePanelDisplayMutable\";\n\nfunction ScorePanel(props) {\n  const canChangeScore = props.canChangeScore;\n  let scoreDisplayCode;\n    if (canChangeScore) {\n    scoreDisplayCode = (\n      <ScorePanelDisplayMutable \n        isScoreLarge={props.isScoreLarge} \n        scoreValue={props.scoreValue} \n        handleVpChipChange={e => {\n          e.preventDefault();\n          props.changeVpChipCount(e.target.id);\n        }} \n      />\n    );\n  } else {\n    scoreDisplayCode = (\n      <ScorePanelDisplayImmutable \n        isScoreLarge={props.isScoreLarge} \n        scoreValue={props.scoreValue} \n      />\n    );\n  }\n  return(\n    <div className=\"text-center bordered-round\">\n      <p className=\"text-muted\">{props.titleText}</p>\n      {scoreDisplayCode}\n    </div>\n  );\n}\n\nScorePanel.propTypes = {\n  changeVpChipCount: PropTypes.func, \n  canChangeScore: PropTypes.bool.isRequired, \n  titleText: PropTypes.string.isRequired, \n}\n\nexport default ScorePanel;","import React from 'react';\nimport {\n  Col, \n  Container, \n  Row\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport ScorePanel from \"./ScorePanel\"\n\nconst Scoring = (props) => (\n  <Container>\n    <Row>\n      <Col>\n        <ScorePanel \n          titleText=\"Total Points\" \n          scoreValue={props.totalVpScore} \n          isScoreLarge={true} \n          canChangeScore={false}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col className=\"px-1\">\n        <ScorePanel \n          titleText=\"Chips\" \n          scoreValue={props.vpScore.vpChips} \n          isScoreLarge={false} \n          canChangeScore={true}\n          changeVpChipCount={changeType => props.changeVpChipCount(changeType)}\n        />\n      </Col>\n      <Col className=\"px-1\">\n        <ScorePanel \n          titleText=\"Buildings\" \n          scoreValue={props.vpScore.vpBuildings} \n          isScoreLarge={false} \n          canChangeScore={false}\n        />\n      </Col>\n      <Col className=\"px-1\">\n        <ScorePanel \n          titleText=\"Bonuses\" \n          scoreValue={props.vpScore.vpBonuses} \n          isScoreLarge={false} \n          canChangeScore={false}\n        />\n      </Col>\n    </Row>\n  </Container>\n);\n\nScoring.propTypes = {\n  vpScore: PropTypes.shape({\n      vpChips: PropTypes.number, \n      vpBuildings: PropTypes.number, \n      vpBonuses: PropTypes.number\n    }).isRequired,\n  totalVpScore: PropTypes.number.isRequired\n}\n\nexport default Scoring;","import React, { Component } from 'react';\nimport {Container, Row, Col} from 'reactstrap';\nimport Header from './components/Header';\nimport BuildingSelector from './components/BuildingSelector';\nimport Scoring from './components/Scoring';\n// TODO: Clean up unused dependencies in package.JSON\n\nclass App extends Component {\n// TODO: Move this data into a separate file (once I learn Redux)\n  state = {\n    vpChips: 0, \n    buildingColumns: [\n      {\n        buildingLevel: 1,\n        buildings: [\n          {\n            buildingName: \"Small Indigo Plant\", \n            buildingType: \"production-small\", \n            buildingPoints: 1,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Small Sugar Mill\", \n            buildingType: \"production-small\", \n            buildingPoints: 1,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Small Market\", \n            buildingType: \"violet\", \n            buildingPoints: 1,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Hacienda\", \n            buildingType: \"violet\", \n            buildingPoints: 1,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Construction Hut\", \n            buildingType: \"violet\", \n            buildingPoints: 1,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Small Warehouse\", \n            buildingType: \"violet\", \n            buildingPoints: 1,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          }, \n        ]\n      },\n      {\n        buildingLevel: 2,\n        buildings: [\n          {\n            buildingName: \"Indigo Plant\", \n            buildingType: \"production-large\", \n            buildingPoints: 2,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Sugar Mill\", \n            buildingType: \"production-large\", \n            buildingPoints: 2,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Hospice\", \n            buildingType: \"violet\", \n            buildingPoints: 2,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Office\", \n            buildingType: \"violet\", \n            buildingPoints: 2,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Large Market\", \n            buildingType: \"violet\", \n            buildingPoints: 2,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Large Warehouse\", \n            buildingType: \"violet\", \n            buildingPoints: 2,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n        ]\n      },\n      {\n        buildingLevel: 3,\n        buildings: [\n          {\n            buildingName: \"Tobacco Storage\", \n            buildingType: \"production-large\", \n            buildingPoints: 3,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Coffee Roaster\", \n            buildingType: \"production-large\", \n            buildingPoints: 3,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Factory\", \n            buildingType: \"violet\", \n            buildingPoints: 3,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"University\", \n            buildingType: \"violet\", \n            buildingPoints: 3,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Harbor\", \n            buildingType: \"violet\", \n            buildingPoints: 3,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Wharf\", \n            buildingType: \"violet\", \n            buildingPoints: 3,\n            isBuilt: false, \n            isActive: true,\n            bonusContributor: 0, \n          },\n        ]\n      },\n      {\n        buildingLevel: 4,\n        buildings: [\n          {\n            buildingName: \"Guild Hall\", \n            buildingType: \"violet\", \n            buildingPoints: 4,\n            isBuilt: false, \n            isActive: false, \n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Customs House\", \n            buildingType: \"violet\", \n            buildingPoints: 4,\n            isBuilt: false, \n            isActive: false, \n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Residence\", \n            buildingType: \"violet\", \n            buildingPoints: 4,\n            isBuilt: false, \n            isActive: false,\n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"City Hall\", \n            buildingType: \"violet\", \n            buildingPoints: 4,\n            isBuilt: false, \n            isActive: false, \n            bonusContributor: 0, \n          },\n          {\n            buildingName: \"Fortress\", \n            buildingType: \"violet\", \n            buildingPoints: 4,\n            isBuilt: false, \n            isActive: false,\n            bonusContributor: 0,  \n          },\n        ]\n      },\n    ], \n  }\n\n  // General helper functions\n  isNumber = (valueToCheck) => {\n    // Unary + in parseFloat speeds up some edge case checks\n    // See https://stackoverflow.com/questions/6449611/how-to-check-whether-a-value-is-a-number-in-javascript-or-jquery\n    return !isNaN(parseFloat(+valueToCheck)) && isFinite(valueToCheck)\n  }\n\n  flattenBuildingColumnsInState = () => {\n    return this.state.buildingColumns.reduce(\n      (acc, cur) => acc.concat(cur.buildings), \n      []\n    );\n  }\n\n\n  // Handler helper functions\n  changePropertyOf = (buildingToChange, otherArgs, callback) => {\n    this.setState({\n      buildingColumns: this.state.buildingColumns.map((column) => {\n        return({\n          ...column,\n          buildings: column.buildings.map((building) => {\n            if (building.buildingName === buildingToChange) {\n              // changeProperty(building, args)\n              // changeProperty is passed in as a callback\n              // changeProperty will edit the building state object\n              // then will return it back\n              // This lets the \"building scanner\" code run generically\n              // args is an object holding all other arguments\n              return (callback(building, otherArgs));\n            } // end if\n            return building;\n          }) // end .map\n        }); // end return\n      }) // end .map\n    }); // end setState\n  }\n\n  callbackForToggleBoolPropertyOf = (building, otherArgs) => {\n    if (\"property\" in otherArgs) {\n      return({\n          ...building, \n          [otherArgs.property]: !building[otherArgs.property]\n        });\n    } else {\n      console.log('otherArgs did not contain key \"property\"');\n    }\n  }\n\n  callbackForSetBonusContributorOf = (building, otherArgs) => {\n    if (\"contrib\" in otherArgs) {\n      if (this.isNumber(otherArgs.contrib)) {\n        return({\n            ...building, \n            bonusContributor: otherArgs.contrib\n        });\n      } else {\n        return({\n            ...building, \n            bonusContributor: \"\"\n        });\n      }\n    } else {\n      console.log('otherArgs did not contain key \"contrib\"');\n    }\n  }\n\n  toggleBoolPropertyOf = (property, buildingToChange) => {\n    const otherArgs = {property: property};\n    this.changePropertyOf(\n      buildingToChange, \n      otherArgs, \n      this.callbackForToggleBoolPropertyOf\n    );\n  }\n\n\n  // State calculation helper functions\n  countBuiltBuildings = (buildingType) => {\n    let returnValue = 0;\n    const flattenedBuildingArray = this.flattenBuildingColumnsInState();\n    returnValue = flattenedBuildingArray.reduce(\n      (acc, cur) => {\n        if (cur.buildingType === buildingType && cur.isBuilt) {\n          return acc + 1;\n        } else {\n          return acc;\n        }\n      }, 0\n    );\n    return returnValue;\n  }\n\n  getVpBonusFor = (building) => {\n    let buildingBonusPoints = 0;\n    if (building.isActive && building.isBuilt) {\n      switch (building.buildingName) {\n        case \"Guild Hall\":\n          buildingBonusPoints = (\n            building.otherArgs.productionLgCount * 2 + \n            building.otherArgs.productionSmCount\n          );\n          break;\n        case \"Customs House\":\n          buildingBonusPoints = Math.floor(building.otherArgs.vpChips / 4);\n          // buildingBonusPoints = 2;\n          break;\n        case \"Residence\":\n          buildingBonusPoints = (\n            building.bonusContributor <= 4 ? \n            4 : \n            (building.bonusContributor - 5)  \n          );\n          break;\n        case \"City Hall\":\n          buildingBonusPoints = building.otherArgs.productionVioletCount;\n          break;\n        case \"Fortress\":\n          buildingBonusPoints = Math.floor(building.bonusContributor / 3);\n          break;\n        default:\n          break;\n      }\n    }\n    return buildingBonusPoints;\n  }\n\n  getVpBonuses = () => {\n    const vpBuildings = this.state.buildingColumns[3].buildings; \n    const otherArgs = {\n      vpChips: this.state.vpChips, \n      productionLgCount: this.countBuiltBuildings(\"production-large\"), \n      productionSmCount: this.countBuiltBuildings(\"production-small\"), \n      productionVioletCount: this.countBuiltBuildings(\"violet\")\n    }\n    const adjustedBuildingArray = vpBuildings.map(\n      (building) => {\n        return ({\n          ...building, \n          otherArgs\n        });\n      }\n    );\n    const buildingVpBonusArray = adjustedBuildingArray.map(this.getVpBonusFor);\n    return buildingVpBonusArray.reduce((acc, cur) => acc + cur);\n  };\n\n  getVpBuildings = () => {\n    let returnValue = 0;\n    const flattenedBuildingArray = this.flattenBuildingColumnsInState();\n    returnValue = flattenedBuildingArray.reduce(\n      (acc, cur) => {\n        if (cur.isBuilt) {\n          return acc + cur.buildingPoints;\n        } else {\n          return acc;\n        }\n      }, 0\n    );\n    return returnValue;\n  };\n\n\n  // Handler functions\n  changeVpChipCount = (changeType) => {\n    let changeValue;\n    if (changeType === \"increment\") {\n      changeValue = 1;\n    } else if (changeType === \"decrement\" && this.state.vpChips > 0) {\n      changeValue = -1;\n    } else {\n      changeValue = 0;\n    }\n    this.setState({\n      vpChips: (this.state.vpChips + changeValue)\n    });\n  }\n\n  toggleBuiltOf = (buildingToChange) => {\n    this.toggleBoolPropertyOf(\"isBuilt\", buildingToChange);\n  }\n\n  toggleActiveOf = (buildingToChange) => {\n    this.toggleBoolPropertyOf(\"isActive\", buildingToChange);\n  }\n\n  setBonusContributorOf = (contrib, buildingToChange) => {\n    const otherArgs = {contrib: contrib};\n    this.changePropertyOf(\n      buildingToChange, \n      otherArgs, \n      this.callbackForSetBonusContributorOf);\n  }\n\n\n  // State calculation functions\n  getTotalVpScore = () => {\n    return this.state.vpChips + \n      this.getVpBuildings() + \n      this.getVpBonuses();\n  };\n\n  getVpScoreObject = () => {return {\n    vpChips: this.state.vpChips, \n    vpBuildings: this.getVpBuildings(), \n    vpBonuses: this.getVpBonuses()\n  };}\n\n  render() {\n    return (\n      <div className=\"scoresheet\">\n        <Container fluid={true}>\n          <Row>\n            <Col>\n              <Header />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <Scoring \n                vpScore={this.getVpScoreObject()} \n                totalVpScore={this.getTotalVpScore()}\n                changeVpChipCount={this.changeVpChipCount}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col>\n              <BuildingSelector \n                buildingsData={this.state.buildingColumns} \n                toggleBuiltOf={this.toggleBuiltOf}\n                toggleActiveOf={this.toggleActiveOf}\n                setBonusContributorOf={this.setBonusContributorOf}\n              />\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}